{
    "contractName": "TestToken",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "from",
                    "type": "address"
                },
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "name": "",
                    "type": "uint8"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                },
                {
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "_name",
                    "type": "string"
                },
                {
                    "name": "_symbol",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        }
    ],
    "bytecode": "0x60806040526005805460ff191660121790553480156200001e57600080fd5b5060405162000aca38038062000aca833981018060405260408110156200004457600080fd5b8101908080516401000000008111156200005d57600080fd5b820160208101848111156200007157600080fd5b81516401000000008111828201871017156200008c57600080fd5b50509291906020018051640100000000811115620000a957600080fd5b82016020810184811115620000bd57600080fd5b8151640100000000811182820187101715620000d857600080fd5b50508451909350620000f492506003915060208501906200020b565b5080516200010a9060049060208401906200020b565b506200012a336969e10de76676d080000064010000000062000132810204565b5050620002b0565b600160a060020a03821615156200014857600080fd5b600254620001659082640100000000620007c5620001f182021704565b600255600160a060020a0382166000908152602081905260409020546200019b9082640100000000620007c5620001f182021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200020457600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027e565b828001600101855582156200027e579182015b828111156200027e57825182559160200191906001019062000261565b506200028c92915062000290565b5090565b620002ad91905b808211156200028c576000815560010162000297565b90565b61080a80620002c06000396000f3fe6080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461018a57806323b872dd146101b1578063313ce567146101f4578063395093511461021f57806370a082311461025857806395d89b411461028b578063a457c2d7146102a0578063a9059cbb146102d9578063dd62ed3e14610312575b600080fd5b3480156100bf57600080fd5b506100c861034d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101025781810151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014957600080fd5b506101766004803603604081101561016057600080fd5b50600160a060020a0381351690602001356103db565b604080519115158252519081900360200190f35b34801561019657600080fd5b5061019f610459565b60408051918252519081900360200190f35b3480156101bd57600080fd5b50610176600480360360608110156101d457600080fd5b50600160a060020a0381358116916020810135909116906040013561045f565b34801561020057600080fd5b50610209610528565b6040805160ff9092168252519081900360200190f35b34801561022b57600080fd5b506101766004803603604081101561024257600080fd5b50600160a060020a038135169060200135610531565b34801561026457600080fd5b5061019f6004803603602081101561027b57600080fd5b5035600160a060020a03166105e1565b34801561029757600080fd5b506100c86105fc565b3480156102ac57600080fd5b50610176600480360360408110156102c357600080fd5b50600160a060020a038135169060200135610657565b3480156102e557600080fd5b50610176600480360360408110156102fc57600080fd5b50600160a060020a0381351690602001356106a2565b34801561031e57600080fd5b5061019f6004803603604081101561033557600080fd5b50600160a060020a03813581169160200135166106b8565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b505050505081565b6000600160a060020a03831615156103f257600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610493908363ffffffff6106e316565b600160a060020a03851660009081526001602090815260408083203384529091529020556104c28484846106f8565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60055460ff1681565b6000600160a060020a038316151561054857600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461057c908363ffffffff6107c516565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b6000600160a060020a038316151561066e57600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461057c908363ffffffff6106e316565b60006106af3384846106f8565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156106f257600080fd5b50900390565b600160a060020a038216151561070d57600080fd5b600160a060020a038316600090815260208190526040902054610736908263ffffffff6106e316565b600160a060020a03808516600090815260208190526040808220939093559084168152205461076b908263ffffffff6107c516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156107d757600080fd5b939250505056fea165627a7a7230582033c16bd675a77096f5b2bb6c620f0f77658b05321b9a2669e2163b0bc17dc11b0029",
    "deployedBytecode": "0x6080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461018a57806323b872dd146101b1578063313ce567146101f4578063395093511461021f57806370a082311461025857806395d89b411461028b578063a457c2d7146102a0578063a9059cbb146102d9578063dd62ed3e14610312575b600080fd5b3480156100bf57600080fd5b506100c861034d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101025781810151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014957600080fd5b506101766004803603604081101561016057600080fd5b50600160a060020a0381351690602001356103db565b604080519115158252519081900360200190f35b34801561019657600080fd5b5061019f610459565b60408051918252519081900360200190f35b3480156101bd57600080fd5b50610176600480360360608110156101d457600080fd5b50600160a060020a0381358116916020810135909116906040013561045f565b34801561020057600080fd5b50610209610528565b6040805160ff9092168252519081900360200190f35b34801561022b57600080fd5b506101766004803603604081101561024257600080fd5b50600160a060020a038135169060200135610531565b34801561026457600080fd5b5061019f6004803603602081101561027b57600080fd5b5035600160a060020a03166105e1565b34801561029757600080fd5b506100c86105fc565b3480156102ac57600080fd5b50610176600480360360408110156102c357600080fd5b50600160a060020a038135169060200135610657565b3480156102e557600080fd5b50610176600480360360408110156102fc57600080fd5b50600160a060020a0381351690602001356106a2565b34801561031e57600080fd5b5061019f6004803603604081101561033557600080fd5b50600160a060020a03813581169160200135166106b8565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b505050505081565b6000600160a060020a03831615156103f257600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610493908363ffffffff6106e316565b600160a060020a03851660009081526001602090815260408083203384529091529020556104c28484846106f8565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60055460ff1681565b6000600160a060020a038316151561054857600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461057c908363ffffffff6107c516565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d35780601f106103a8576101008083540402835291602001916103d3565b6000600160a060020a038316151561066e57600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461057c908363ffffffff6106e316565b60006106af3384846106f8565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156106f257600080fd5b50900390565b600160a060020a038216151561070d57600080fd5b600160a060020a038316600090815260208190526040902054610736908263ffffffff6106e316565b600160a060020a03808516600090815260208190526040808220939093559084168152205461076b908263ffffffff6107c516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156107d757600080fd5b939250505056fea165627a7a7230582033c16bd675a77096f5b2bb6c620f0f77658b05321b9a2669e2163b0bc17dc11b0029",
    "sourceMap": "90:279:8:-;;;175:26;;;-1:-1:-1;;175:26:8;199:2;175:26;;;208:159;5:2:-1;;;;30:1;27;20:12;5:2;208:159:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;208:159:8;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;208:159:8;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;281:12:8;;208:159;;-1:-1:-1;281:12:8;;-1:-1:-1;281:4:8;;-1:-1:-1;281:12:8;;;;;:::i;:::-;-1:-1:-1;303:16:8;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;329:31:8;335:10;347:12;329:5;;;;:31;:::i;:::-;208:159;;90:279;;6198:263:17;-1:-1:-1;;;;;6272:21:17;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:16;;;;;;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:17;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:17;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:15:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:15:o;90:279:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;90:279:8;;;-1:-1:-1;90:279:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "deployedSourceMap": "90:279:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;125:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;125:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;125:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2735:238:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:17;;;;;;;;;;;;;;;;;;;;;;;;;;;936:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:17;;;;;;;;;;;;;;;;;;;;3436:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3436:294:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:17;;;;;;;;;;;;;;;;;;175:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;175:26:8;;;;;;;;;;;;;;;;;;;;;;;4233:317:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:17;;;;;;;;;1234:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:17;-1:-1:-1;;;;;1234:104:17;;;149:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;149:20:8;;;;5058:327:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:17;;;;;;;;;1962:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1962:137:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1962:137:17;;;;;;;;;1669:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1669:129:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:17;;;;;;;;;;;125:18:8;;;;;;;;;;;;;;;-1:-1:-1;;125:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2735:238:17:-;2800:4;-1:-1:-1;;;;;2824:21:17;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:17;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:17;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:17;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:17;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:17;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:17;3436:294;;;;;:::o;175:26:8:-;;;;;;:::o;4233:317:17:-;4313:4;-1:-1:-1;;;;;4337:21:17;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:17;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:17;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:17;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:17;1289:7;1315:16;;;;;;;;;;;;1234:104::o;149:20:8:-;;;;;;;;;;;;;;;-1:-1:-1;;149:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:327:17;5143:4;-1:-1:-1;;;;;5167:21:17;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:17;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:17;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:17;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1205:145:15:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:15;;;1205:145::o;5599:256:17:-;-1:-1:-1;;;;;5686:16:17;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:17;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:17;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:17;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:15:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:15:o",
    "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestToken is ERC20 {\n\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n\n    constructor(string memory _name, string memory _symbol) public {\n        name = _name;\n        symbol = _symbol;\n        _mint(msg.sender, 500000 ether);\n    }\n}\n",
    "compiler": {
        "name": "solc",
        "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.0.2",
    "updatedAt": "2019-04-05T04:35:41.184Z",
    "devdoc": {
        "methods": {
            "allowance(address,address)": {
                "details": "Function to check the amount of tokens that an owner allowed to a spender.",
                "params": {
                    "owner": "address The address which owns the funds.",
                    "spender": "address The address which will spend the funds."
                },
                "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
                "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
                "params": {
                    "spender": "The address which will spend the funds.",
                    "value": "The amount of tokens to be spent."
                }
            },
            "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                    "owner": "The address to query the balance of."
                },
                "return": "An uint256 representing the amount owned by the passed address."
            },
            "decreaseAllowance(address,uint256)": {
                "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
                "params": {
                    "spender": "The address which will spend the funds.",
                    "subtractedValue": "The amount of tokens to decrease the allowance by."
                }
            },
            "increaseAllowance(address,uint256)": {
                "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
                "params": {
                    "addedValue": "The amount of tokens to increase the allowance by.",
                    "spender": "The address which will spend the funds."
                }
            },
            "totalSupply()": {
                "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
                "details": "Transfer token for a specified address",
                "params": {
                    "to": "The address to transfer to.",
                    "value": "The amount to be transferred."
                }
            },
            "transferFrom(address,address,uint256)": {
                "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
                "params": {
                    "from": "address The address which you want to send tokens from",
                    "to": "address The address which you want to transfer to",
                    "value": "uint256 the amount of tokens to be transferred"
                }
            }
        }
    },
    "userdoc": {
        "methods": {}
    }
}
