// Package witness Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../node_modules/@kosu/system-contracts/src/deployedAddresses.json
package witness

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Node_modulesKosuSystemContractsSrcDeployedaddressesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9d\xcf\x8f\x5c\x49\x8e\xdf\xef\xf3\x57\x08\x3a\xfb\x40\x32\x18\x24\xa3\x6f\x6b\x63\xb0\x36\x6c\xd8\x86\xbd\xde\x83\x8d\x3d\x30\xf8\xa3\x57\x58\xb5\x6a\x20\x95\xc6\xb3\x5e\xcc\xff\x6e\xa4\x7a\x46\xdd\x93\xf5\xa4\xca\xaa\xce\xd2\xce\xa2\x93\x87\x86\x3a\x33\xea\xc5\xfb\x11\xf1\x09\x06\xf9\xe5\xcb\x7f\xf9\xcd\xab\x57\xaf\x5e\xbd\x1e\xaf\xbf\x7b\xf5\xe3\x3f\x3f\xfd\xef\x7f\x7b\x9f\xf5\xfe\x6f\xfd\xbe\xfe\xaf\xff\xf3\x5f\x7c\xf3\xe9\xdb\xfd\xf6\x2e\xfe\xe9\x3f\xfa\x87\x7f\x7c\xfd\xdd\xab\xd7\xf0\x07\xf3\x85\x0d\x25\xea\xe2\x80\x08\xab\x9b\x79\x72\x20\x59\x28\x45\x5b\xc6\xb2\x25\x81\x14\x96\xb4\xac\x04\xa3\x27\x5a\xa7\xd9\x04\x5a\xaf\xff\xdd\xc1\xe1\xff\xeb\xc7\x1f\x76\xbd\x7f\xfd\xdd\x2b\x21\xe3\x31\xf1\xac\x4d\xdc\xbd\xbb\x7f\xef\x71\xff\x37\x99\xef\xeb\xc3\x87\x1f\x4f\xa4\x27\x41\x66\x86\xc4\x9a\x50\x06\xd0\x84\x31\xab\x19\x06\xf4\xe4\xdc\x39\x15\x39\xf1\xbc\xc3\xf8\xf8\xc3\xc7\xb7\x7e\xff\xe6\xf7\xf5\xb7\xfe\xe1\x7f\x7d\xa8\x7c\xfd\xdd\x2b\x14\x98\x34\xc7\x59\xcb\x7e\x7f\xf7\xc3\x8f\x7d\xb9\xcf\xc9\x09\x31\xbb\x4d\xd7\x30\xed\xa0\xc1\x59\x33\x89\x2a\x80\x96\x8d\xed\x4e\x7a\xde\xd7\xf7\x9f\x7b\xe0\xb5\x08\xe4\xec\xeb\xb7\x77\xdf\x9f\x2e\xe6\xff\xfc\xc3\xc1\xe7\xff\xfe\xed\xdd\x9f\x7b\x87\x9b\xfd\xaa\xed\x7c\x54\xbd\xbf\xbb\xbb\x7f\xfd\xdd\xab\x77\x1f\xdf\xbe\x3d\xfb\xe6\xc3\xbd\xdf\x7f\x3c\x0d\xa9\xf3\x19\x74\x7f\x77\xfc\x07\xf7\xef\xfd\xdd\x07\x8f\xfb\x37\x77\xef\x7e\x36\xc5\x29\x67\x34\x5a\x13\x77\xc6\xda\xcb\x3b\x57\x2a\x52\xaf\x4a\xdb\xd8\x8c\x5c\x33\x0b\x06\x6c\x6e\xe7\x4d\x96\x83\x72\xfa\x5a\x88\xe0\x7c\x7e\xbe\x3f\xeb\xe4\x3f\xbd\xcb\xfa\xc3\x69\x3a\x9c\x37\x79\xf3\x43\x7d\xb8\xf7\x1f\x7e\x77\x3a\xf7\x29\x0a\x83\x07\xcb\xe7\x36\x7f\xfc\xa9\xf9\xeb\xbf\xf9\x78\xff\x8f\x77\xef\xdf\xfc\xbf\xca\x3f\xe1\xa0\x3e\x3c\x0a\xad\xe0\xca\x9e\x6b\x0e\x62\x95\x6c\x00\x8c\x70\x6a\xae\x45\x39\x54\x74\x4c\x9b\x08\x4d\x0a\x63\xef\x9e\x3a\x4a\x82\xc4\x90\x8b\x34\x43\xe8\x12\x68\x9d\xd3\xe3\x10\x5a\x6b\x3a\x30\x6c\xb5\x09\xbb\x7a\xb0\x4c\x76\x75\xec\xea\xbd\xb5\xda\x37\xe5\x08\xc3\x07\x8f\xfc\x10\x5a\x00\x06\xaa\x2f\x08\xad\x41\xb2\xec\xfc\x51\xfd\x19\x5a\x7f\xf1\xe9\xc9\xfe\xe5\xc1\x27\x9f\xda\xfb\x15\xae\xff\x1b\x3d\xd7\xa7\x3c\xdf\xcf\x6d\xd3\xef\xfd\xc7\xb3\xf9\xd2\xd1\xde\xde\x7d\xff\xe7\x71\x8f\xf0\x85\x36\xef\xeb\x87\xbb\xdf\x7f\xba\xe9\xed\x6f\x3f\xd4\x17\x5a\xdd\xdf\xfd\xee\x4d\x1c\xdf\xfd\xcf\x6d\xe0\x0f\xb6\x0b\x40\x57\xcc\x81\x32\x17\x32\x0e\xe6\x48\xec\x04\xe7\x26\x63\x5c\xbc\xb4\x97\x12\xf9\x48\xf7\xae\xb1\x19\x4d\x5a\xb6\xf0\xd4\xfa\xd2\xcd\xff\xd3\xd1\xaf\x4c\xb3\x0b\x8f\x7e\xf1\x60\x3e\x3c\xf8\x3f\x7c\xe9\x7e\x1e\xe1\x8f\x9d\x9c\x3c\x83\x7c\x20\x6b\xe6\x48\xc0\x59\x63\xee\xe5\x52\x6a\xd2\x25\xa5\xb1\x88\x69\x12\x87\x08\xfa\x06\x63\x65\xe2\xd0\x69\x53\xbe\x34\x0c\x0e\x30\x38\x1f\x6f\xfa\x5f\x7e\x1a\x3c\xa7\xdb\xf3\xc5\x83\xff\xf3\xef\xea\xd4\xe4\x87\x37\xef\x2a\x1f\xde\x84\x3f\xfe\xe6\x2b\xb7\xe3\x97\xfb\x1b\x76\xf4\x21\x3d\xfd\x38\x17\x1b\x5e\xd4\xea\xe8\x0c\xec\x91\xef\x81\x9f\x7b\x4e\x17\x5f\xf2\x65\x27\xff\xbc\xbf\x38\x38\x83\xc3\x87\xf3\x35\xfb\xd6\xfe\xc6\x95\x27\xdc\x05\x13\xed\xd0\xdf\x98\x70\xe8\x6f\xfc\xf6\xf7\xf5\xee\xfe\xb7\x3f\xbc\xb9\xbf\xff\xb4\x18\x7c\xdd\xd1\x18\xd8\x93\xe7\xa4\xd8\x32\xc8\x54\xd5\xa6\xd4\x1c\x94\xd5\xb3\xa5\x77\x30\xf4\x69\xd5\x26\x8f\xd2\x26\xd0\x91\x5c\xdb\x37\xa8\xf3\x20\x7c\x70\x29\x47\x0b\xd1\xf9\x2e\xe2\xd0\xd1\x00\x1d\x15\x99\x2b\xca\x0b\x5a\x7b\x0b\xaf\x5c\x0b\xb7\xe4\xee\x2c\x13\x5a\x1d\x7b\x3e\xf0\xd5\x8e\x1c\x0d\x26\x9b\x76\xde\xeb\x35\xfd\x0c\x92\xb9\x88\x6e\x9b\xa3\x9b\x3d\xdd\xbe\x35\xac\x82\x17\x2d\x74\x11\x9a\x6e\x3e\x2c\x9b\x49\x73\x81\x5b\xef\x31\x70\x16\x99\x54\x85\x82\xf9\x96\xf6\x10\x13\xb0\xc8\x9c\xee\x73\xd4\x7e\x70\xbe\x07\xb0\x3a\x9f\x09\x47\xb0\x12\x3c\x84\xd5\x7f\xbe\xfb\xf0\xf1\xef\xee\xfe\xa9\xde\x3d\x4a\x2a\x77\xe0\xda\x51\x88\x3e\x03\xc6\x64\x4b\xde\xb4\xa7\xef\x9e\x5b\xf6\x34\x48\xa9\xc5\xdb\xda\xf7\x5a\xe8\xe5\xb8\x83\x96\x31\x2d\x80\xed\xe3\x12\x52\xd9\x25\xa4\x62\xc4\xf0\x40\x76\x9b\x8b\xf6\x0e\xca\x35\x8c\xbd\x6b\x31\x6f\x4c\x28\x44\x74\xb3\x07\x68\x3c\x22\x15\x2d\x5b\xe3\x45\xb7\x44\xb4\x18\x58\xe0\xc6\xaa\x9b\x3d\xdd\xbe\x35\xab\x5a\x5c\xda\xb5\x34\x94\xd6\x6e\xb4\xe5\x7b\x03\x47\x49\x45\x0f\x33\x59\x74\xda\x07\x6e\x0b\x1b\xee\x51\xdd\x3c\x26\x16\xe3\x86\xdc\xca\x76\x01\xab\x1e\x9c\xdf\x11\xab\xf4\x90\x55\x7f\xf7\xbe\xfc\xc3\xc7\xf7\x8f\x87\x9c\x5d\xb2\x6d\xce\x04\xe8\x1a\x0b\x1a\xa8\x54\xbc\xa2\x00\x21\xb7\xab\x5b\x75\xae\x32\x00\x4c\x72\x37\xd9\xbd\x98\x76\xb0\x00\x12\xd1\x25\xd1\x9b\x07\x33\xfa\x18\x55\x03\xad\x56\xf6\xe9\x1e\x25\xd3\x6a\x9e\x96\x69\xee\xc5\x23\x4b\x9c\xc7\x0e\x44\x7c\x80\x8f\x23\x54\xcd\x31\xa7\xc2\x39\xea\xaf\x89\x2a\x9c\x00\xbc\xbe\x14\xbe\xb9\xa1\xea\x66\x5f\xb1\x6f\x8d\xaa\x95\xb4\x73\x2e\xc3\x29\x6b\x8f\x08\x50\xf8\xe4\x52\x6d\x32\x58\x6b\x5a\x96\xeb\x98\x44\x80\x3c\x76\x11\x1b\xe3\xcc\x96\xc6\x75\x6a\x6b\x0f\xa6\xc1\x91\x5b\x75\xc1\x26\x90\xf1\xd8\xaf\xfa\xfb\xbb\xfb\x37\xef\xbe\x7f\x7c\xfb\xd7\x99\xc6\xe4\xba\x76\x91\x92\xce\xee\x9c\x92\x72\xda\xfe\x61\xa0\x14\x39\x04\x6e\xcd\x28\xdf\xb9\x7b\xf4\x74\x00\xdf\x05\x58\xdc\x0f\x27\xf3\x11\xa9\xce\x91\x71\x48\x2a\xd5\x9e\xc0\xc9\xe3\x74\x49\x23\xa7\xd9\x76\xb5\xa8\xd0\x35\x43\x1c\xc8\x17\xe0\xb4\xcb\xe2\xcc\xa4\x63\xea\x39\x20\xaf\x49\x2a\x83\x39\xe0\x3c\x7e\x7e\x03\xd5\xcd\x2e\xb0\x6f\x0d\x2a\x71\xda\x81\x13\x68\xea\xde\x43\x6c\x38\x9d\x76\x80\x25\x23\xf7\xb0\x32\x5e\x29\x3b\x93\xd7\x08\xe3\x71\x72\x43\x70\x79\x90\xec\xbd\x79\x8b\x5e\xe2\x53\x5d\x90\x1c\x63\xa6\x43\x4e\xfd\xf7\xbb\x0f\xf7\xf5\xfe\x7f\xd4\xf7\x6f\x3e\xdc\x5f\xe0\x59\xf5\x86\x88\x5e\xdc\xce\x54\x93\xcd\xc0\xa7\xa1\xaf\xa2\x31\xe6\x92\x5a\x20\xb3\x07\xc2\x14\x29\xe0\x98\x4e\x5a\x43\x80\x39\x36\x25\xec\x7d\x09\xaf\xce\xaf\xe6\x38\x2f\x06\xc4\x2d\x58\x3e\xad\x81\x7a\xfb\x08\x4b\x6e\xc6\xb5\xd4\x26\xb6\x0f\x8c\x11\x75\x91\x67\xa5\x27\x9f\xef\xfc\x19\x5f\x13\x57\xd3\x6c\xde\xb6\x80\x37\x7b\x8e\x7d\x73\xbf\x0a\x65\x6b\x31\x11\x29\xc8\x64\x87\x91\x82\x6d\x14\x42\x5b\xb5\x16\x9e\x06\xfe\x18\x62\x1e\x35\x26\x0a\x8d\xda\xab\x64\xf9\x69\x73\xc2\xf5\x40\x3d\xf3\xbc\xd8\x3a\xcf\x79\xec\x56\xf9\xdb\x37\xe9\xf7\x77\x97\x13\x6b\xc1\x8a\x9d\xd9\x18\xa8\x31\xb2\x48\xa6\x86\xc5\xe0\x74\xe0\xb0\x46\x89\xd5\x36\x17\xe9\x96\x0d\xe1\x6b\xed\x54\xc9\x50\x8a\xe0\x95\x0f\xe2\xdd\x47\xc4\xba\x28\xc0\x6e\x5b\x2a\xe7\xee\xb9\x06\x32\x0c\xf0\x29\xda\x73\x81\x2b\x26\x33\x2a\x4c\x6b\xc3\x95\x17\xed\x05\x89\x4c\xe0\x25\xc3\x56\x13\x06\x1a\x7f\xc9\xc5\x7a\x56\x2a\xff\x99\x37\xe0\x1b\x3d\xd8\xa7\x3c\xe0\xcf\x6d\x9f\x94\xca\xff\x92\x1e\xe0\x96\xc9\xff\xeb\xc9\xe4\x87\xa2\x90\xaa\x37\xf6\xe9\x8e\xc8\x6a\x5a\x88\x8e\xd5\x35\xa9\x1a\x5b\xc0\xc5\x7c\xd9\xa6\x24\x59\x96\xb1\x9b\x69\xcb\x9e\xd0\xc3\xfa\x09\x99\x7c\xba\x65\xf2\x2f\xb0\x83\x3c\xf6\x75\x32\xf9\x87\xc6\xbf\x28\x97\x7f\x89\x5d\x31\x93\xff\xe0\x0a\xaf\x71\xd3\xbf\x79\x26\xff\xba\x13\xee\x99\xc9\x31\x96\xe3\xcd\xd1\xff\xae\xf7\x77\xbf\xfd\xc3\xdf\xd3\xff\xfc\xb8\xff\xc3\x9f\x96\xf4\xc7\xe5\xce\x46\x40\x6b\x0a\x29\x57\x7a\xe1\x00\x59\xab\x7c\x23\x99\xa5\x62\x36\xec\xc1\x8c\x66\xc9\xe4\x3a\xab\x5d\x8b\x82\x1a\x4d\x0c\x64\x3f\x58\xfe\x8f\x96\xa3\x8b\xd2\x64\xca\xea\xb0\x93\x3d\x4a\x16\x31\xec\x09\x43\xc8\x41\x92\x9a\x61\x49\xe1\x8a\xc0\x71\x59\x44\xc7\x16\xe1\x03\x61\xdf\x55\x63\xcf\xaa\x62\x7a\xd3\x3b\xdf\xec\x19\xf6\xad\xa9\x55\x7b\xae\x93\xff\xda\x60\x11\x11\xbd\x76\x31\x95\x4e\xb2\xa5\xac\x80\x88\x6b\x28\x23\xd7\xc2\xa1\x15\x73\x55\x6b\x42\xca\x92\x1d\x0c\x72\x09\xb5\xce\x3d\xef\x23\x6a\xe9\xcf\xd2\x64\x9f\xfe\xf5\x27\x76\xbd\x16\x54\xfe\x05\x15\x1b\x19\x45\x19\x5b\x44\xaa\x6b\x14\x8e\xe0\xad\x19\xd2\x3a\x98\x52\x9c\x1a\x44\x79\x24\x3b\xa6\xa4\x85\x31\xf3\xc0\x54\xae\x65\x0b\xfa\x11\x84\x5d\xa6\x7b\xde\xd6\xe9\x32\x18\xdb\x20\xb6\xd7\x32\xf5\x3d\x23\x01\x32\x6a\x02\xc1\xd2\x1a\x38\x1f\xa4\xea\x0e\xe5\x48\x47\xa5\x14\x3f\xc1\x2b\x26\x61\xb3\x8d\x16\xd0\xda\xb3\x9c\x53\x36\x65\xe7\xce\xc9\x80\x83\x75\x0e\x37\x99\xb7\x5a\x8d\x9b\x5d\xdf\xce\x47\xd5\x95\x82\xce\xc5\x00\x3a\x2a\xcd\x34\x73\x88\x15\xdb\x44\xf5\x45\xdb\xd4\xa0\xe7\x16\xa2\x69\xa4\x50\x31\x45\x1a\x49\xcb\x75\x6c\x5b\x7b\x63\xf6\x83\xb1\x7e\x40\xa8\xf3\x78\xe6\x01\xa1\xf0\x0b\xc9\xb1\xe7\x54\x64\xb8\x70\xc2\x9c\xa3\xc5\x56\xaf\xbd\xd7\x22\x1d\xa6\x69\x85\x6b\x24\x4b\x3b\x87\x2e\x80\x25\x9d\xee\x09\xcb\x82\xed\xc4\x2a\xe3\x29\x33\x1e\x29\x23\x9b\xe7\x31\xa9\x43\x28\x15\xeb\x40\x58\xb1\x19\x43\x75\x74\x52\x17\x60\xd9\x08\xa9\x89\x63\x4a\xaf\x69\x33\x2f\x52\x1e\x1d\x96\x4a\x5c\x13\x4a\xd7\xaf\xc5\x78\xe6\xe5\xff\x34\x42\x7e\xb5\x21\x8c\x8b\x9f\xe6\x93\x42\x18\x8f\x47\x9f\xbe\x3e\xc8\x3f\x37\x3b\x44\x08\x05\x20\x30\xaf\x14\x1a\xd1\xbe\xad\x1a\xd1\x4e\x1e\x0f\x1b\x99\x4d\xb7\xb0\x60\xa1\x50\xa3\x2d\xb3\x80\x8b\x79\xc0\xa6\xd2\x55\xbd\x9f\x52\xd5\xf0\xa5\x1a\x97\x97\x45\xc0\xe7\x6e\x7e\x16\xa3\xbb\xb0\xda\xe6\x17\x07\x59\x9e\x18\x67\x78\xb2\x22\xff\x97\xda\xc3\xa8\x83\x1d\x9c\xc5\x57\x83\x2c\x5f\x3a\xe7\x97\x0e\xb1\x1c\xda\xd5\x6e\xe0\xf9\x25\x3f\xe7\x6a\x5e\x66\xc9\xbf\xf2\x7c\x7d\xf6\x92\x3f\x0e\x97\xfc\x27\x15\x45\xc8\x04\xed\xb4\xc0\x76\x9d\xbe\x45\x57\x84\x27\xd6\x9c\x1a\xb4\x66\x91\xcf\xd2\x1d\x23\xa9\x33\x18\xab\xbd\x42\xc0\x2d\x21\xba\xd7\x63\x31\x94\x79\x9e\x37\x39\x5c\xeb\xa9\x87\x77\x75\xc3\x42\xee\x31\x54\x56\x64\xef\x1e\x1d\x6d\x0a\x31\xc6\x26\x89\x81\x17\x55\x8b\x1f\x96\x2b\x5c\x73\xad\xbf\xd5\x43\xdc\xec\xb9\xf6\x32\x34\x4a\x57\x62\xc4\x3d\x0a\x72\x28\x0a\x55\x85\x54\x4c\xeb\xd3\xba\xcd\x28\x28\x6a\x85\x30\x79\x49\x45\x17\x5b\xb4\x25\x24\x4c\x68\xd5\x75\x49\xd5\xc3\x45\x34\x3a\x4e\x23\x5f\x5e\xf5\xc0\xd5\x20\x19\x5d\x36\xf9\x34\x3f\x73\xc7\xdc\x80\xb3\x27\xe5\x0e\xa3\xbd\xd8\x87\xf2\x22\x1a\xed\x63\x40\xa2\x48\x59\x01\x9b\x8d\xbd\xe1\x31\xc1\xcb\x45\x2a\xe2\x08\x13\x1b\x20\x29\x68\xb6\x69\x23\xe9\x54\xd7\x18\x8b\x04\x98\x36\xe7\x08\xae\x87\x6f\xca\x38\x2e\x78\x38\x2a\x47\xb8\x2a\x8b\x6e\x05\x0f\x37\x7b\xae\xbd\x0c\x8c\xa2\x84\x22\x77\x7a\x6e\xdd\x90\xab\xf6\xee\x52\xdc\xb1\x01\xa5\x7d\xb3\x78\xee\x4c\x8e\xb2\xdd\x36\x39\x07\x4f\xe0\x3d\x31\x66\x5b\xda\x83\x49\xfc\x5c\x18\xd9\x21\x8c\x2e\x2f\x6b\x30\x18\xb8\x05\x7a\x07\x28\x36\x84\x7b\x89\x8e\x36\x6e\xf3\x8d\xc4\x8e\x13\xa3\x3a\x78\x16\x0c\x21\x9c\x1c\x27\x3a\x01\xb9\xe2\xa4\x07\x37\xf7\x8c\x45\x17\xc5\x65\x59\xa6\x52\x2f\x30\xca\x24\xa6\x15\x14\x38\xac\x7d\xb1\x0d\x17\x4d\x6e\x5a\xc9\xf4\xa0\xda\xeb\x30\xab\x74\x58\x6f\x70\x4d\x16\xdd\x2a\x1a\x6e\xf6\x6c\x7b\x19\x16\xe1\x69\xff\x60\x6d\xce\x31\x07\x0d\xd6\x95\xac\xec\x8d\x6b\xf3\x58\xe6\x96\x4b\xcc\xe7\xa7\xfd\xda\x74\x65\x5b\xa7\x26\x49\x38\x45\x24\xe3\x5a\x8e\x11\xfd\xa2\xb2\x05\xe6\x64\x99\x54\x28\x63\x93\xe7\x10\xcd\x25\x3d\xb6\x22\x0b\x74\x65\x9f\x7c\xb9\x42\x58\xb0\xa1\x36\xb7\x2c\x59\xa3\x43\x57\x9a\xb9\xcf\x07\x9b\xa6\x33\x12\x5d\xa4\xa7\x9b\x29\x10\x6b\xa4\x6d\x36\x31\x8a\x1c\xa6\x61\xbb\xb4\x16\x0b\x6e\xd1\x8a\xde\xe5\x17\x6d\xd0\x0e\xeb\x09\xae\x09\xa2\x5b\xc1\xc2\xcd\x9e\x6b\x2f\xc3\xa1\xd3\x90\x1e\x4a\x10\xdd\xb5\x7c\x0e\x57\x11\xc0\x5e\x1d\x64\xc3\x33\x0d\x29\x24\xb8\x84\xc8\xc2\x74\x98\x9b\x2b\xbb\xf3\xea\xb9\x04\x1f\x2c\xf0\xcf\xe5\x10\x1f\x72\xe8\x89\x65\x09\x2e\xab\x1d\xeb\xb4\x09\xab\xe0\x4e\xe8\x65\x50\x1e\x45\x6e\x49\x65\x8c\x30\xc8\xa6\xe8\xea\x42\x43\xb2\x66\x21\x8b\x2c\x88\x14\xd3\xc7\x0a\x3e\xd7\x45\x7a\x9b\x92\x39\x78\x1b\xc1\x54\x1c\xc4\x52\x0b\x1d\x79\xb3\x50\x9e\xf6\x8a\x1e\xa3\xb2\x2e\xac\xf5\x3c\x2a\x18\xb8\x26\x8f\x6e\x15\x09\x37\x7b\xae\xbd\x0c\x8f\x9c\xa3\x27\xa1\xf8\x08\x5e\x62\xab\x46\x69\xd7\xb0\xb2\xcd\x69\xce\x64\x4c\x38\xba\x3a\x63\x84\x9a\xe9\x66\xd6\x68\xed\xe6\x85\xfd\x70\x0a\x3f\x97\x47\xc7\xa5\xe7\x4f\xaf\x3b\xa0\xd4\xb1\xdd\xbd\xdc\x6a\x69\x64\x70\xef\x0d\xe8\x4b\xb2\x7b\x4b\x2f\x63\x06\x2f\xf4\x39\x76\x44\xe1\xc8\x31\x39\x7c\xb3\x41\x2d\xe0\x47\x5e\x97\xa1\x17\x15\x75\x0e\xc0\xbd\x01\xac\xc9\xcd\x47\x78\xad\x85\xa6\x3c\xba\x78\x30\xd9\x9c\x38\x16\xa9\x5e\xb4\x59\x3b\x2e\x08\xb8\x2a\x93\xae\x5f\x72\xf0\xcc\x1b\xf0\xd3\x08\xb9\x65\xac\xff\x55\x33\xd6\xe7\xc3\xfc\x73\xb3\x43\x84\x8c\x20\x9d\x06\x1b\x52\x11\x72\x80\x92\x63\xd5\xa8\x96\x35\xa1\x60\xe8\xca\x5a\x2d\xa2\x4b\x47\xea\x66\xf2\x24\x66\x02\xb6\x9a\xa5\xfa\xc5\x8a\x90\xe7\x67\xac\xaf\x0c\x81\xcf\xdd\x7c\xf3\x8c\xf5\x93\x75\xeb\x4f\x4c\xb8\x3e\x5d\x17\xff\xbc\x23\xfc\x3a\x32\xd6\x7f\x71\xc2\x7f\xbd\x19\xeb\x2b\xcf\xd7\xe7\x2e\xf9\xe3\xf8\x35\x7e\xcf\x11\xff\x13\x0b\x27\xb9\x03\x74\xae\x39\x41\xa9\x0c\xbd\x68\x73\xf2\x30\x31\xe9\x31\x43\x75\x99\xe8\x88\x14\x31\x58\x3d\x05\x56\x2a\xb9\x81\x3c\x92\x2d\xd2\x8b\x44\x6a\x40\x32\x4b\x13\x37\x2c\x56\xd3\xd8\x38\x50\xb9\xd0\xfc\xc7\xd8\x30\x92\x2e\x97\x87\x82\xb8\xc3\x08\xed\xa1\x2a\xff\xaa\x11\xda\x9b\xee\xff\x66\xcf\xb5\x17\x4a\x5d\xd7\x96\x61\xe8\x02\x05\xe5\xcc\xc4\xbb\x87\xef\x51\x31\x86\x31\xea\x80\x8d\xd5\x2d\x8b\x14\x9a\xa0\x62\xcc\xa4\x2d\xf3\xf4\x37\xa1\x15\xd7\xc2\xd2\xcf\x84\x34\xbf\x79\xf5\x97\xea\xfe\xf9\x0b\xd4\xfd\xed\x32\x85\x61\xe4\x9e\xb4\x9c\x8b\x2b\x27\x2d\x43\xab\x14\x5b\x5d\x0e\x22\xb9\x78\x58\x09\x09\x4c\x49\x2c\x84\x96\x69\xb6\x23\x6b\xfb\x23\x8c\xba\x04\x51\x57\x15\xf7\x2b\x2e\x7d\xc9\x6d\xc9\x61\x07\x37\x40\xdd\xec\x02\x7b\x19\x40\xb1\x59\xbb\xe2\xee\xee\x2c\x58\x1e\x99\x93\x65\x2a\x2f\x81\x89\x15\x15\x2e\x3c\xad\xdd\x3b\x60\xac\x31\x60\x98\xd3\x22\x42\xb3\xf4\x6b\xf8\x4d\x32\xc8\xc0\x8e\x95\x7e\xcf\x11\xf7\x2f\x88\xc9\xbd\x64\x39\x32\x82\x6f\xaf\x40\xd3\xe9\x10\xcd\xdb\xb4\x9d\x05\x7d\xe7\x8e\x45\x6b\xc6\x46\x4f\x65\x5b\xb0\x37\x47\xc3\x78\x2c\x7e\x7b\x51\xb9\xe4\x4d\xdb\x7f\xd3\xf6\xff\x1b\x8e\x94\xd8\x93\x02\x25\xe8\x81\x1b\xa6\x3b\xd6\xcc\xda\x74\xc2\x07\x96\x7a\x10\xef\xdd\xa9\x04\x49\x96\x29\x69\x93\xd8\xd7\xaa\xd1\x64\x23\xcd\x0c\x50\xf7\xb9\x87\x73\xd4\xd9\x13\x03\x25\x57\x06\xc0\xe7\x6e\x6e\xd2\xfe\x07\x76\x93\xf6\x7f\xc1\xfe\x8a\x03\x25\xd7\x9d\xaf\x57\x5e\xf0\x9f\x24\xed\x27\x1e\x11\xba\x89\x0d\x66\xee\x16\x15\xca\x99\xc8\xe2\xed\x8b\x1b\x6b\x6e\x9f\x82\xb0\x4b\x86\xa2\x13\x15\x8a\x6f\x59\xca\x4a\x93\xc7\x23\x65\x7c\x17\x25\x6a\x6f\xca\xfe\x9b\xfd\x2a\xec\x65\x60\x04\x03\x6c\x6c\x66\x24\x58\x40\xb5\x7d\x16\xe6\x6c\x04\xef\xd4\x35\xc2\x93\xaa\x3c\x27\x18\x90\xe5\xf2\xe9\xea\xca\x53\xc2\x62\x98\xc3\x83\xe2\x9c\xeb\xc2\xe8\x72\x65\xbf\x9c\xe8\x59\xd4\x4b\x60\x38\xe0\x27\x85\x6c\x16\x6f\x65\x8f\x99\x18\x5a\x20\xc5\x6c\x9a\x52\x9b\x0b\xf2\x44\x8b\x25\xde\x61\x52\x53\x1e\xf9\xe5\x95\xf3\xdf\xed\xfa\x16\xca\xfe\x85\xf3\xc1\xcb\x33\xaf\xab\xec\x3f\xea\xe1\x06\xa3\x9b\x5d\x60\x2f\x03\xa3\x25\x80\x35\xda\x13\x7d\x20\xad\xd1\x73\xce\xf4\xb9\x4d\x16\xae\x1e\xa2\xe5\xae\x27\x6f\x09\xa6\x66\x6c\xac\xb1\x4b\x99\x45\x68\x4d\x07\xbc\x82\x6a\xe4\x6b\x30\xba\x58\xd9\x1f\x53\x04\xac\x42\x95\xc6\x4c\x1e\xd8\xe4\x98\xba\x99\x6b\x55\x6f\x8d\x76\x6a\x61\x33\xdb\xea\xdc\x25\x85\x1a\x25\xdb\x4e\x9e\xd1\x18\x0f\xde\x11\x7c\xc6\xa2\x8b\x7e\x1e\xf7\xaa\xca\x7e\x62\x45\x7e\x51\x65\xff\x61\x0f\x37\x16\xdd\xec\x02\x7b\x21\xc7\x28\x0c\xc2\x98\x87\x38\xb0\x27\x8f\x11\x0a\xd4\x43\x67\x8a\x79\x04\x62\x1a\xa0\xf3\xac\x2d\x83\x69\xf8\xd6\xcd\xa1\x6e\x73\xca\x34\xbd\xc2\x3b\x57\xbe\xc6\xa2\x0b\x95\xfd\xb1\xd6\x1a\x3c\x87\xef\x05\x94\x8e\xcb\x73\x77\xe5\x4c\x5e\x54\xcc\x3a\x21\x28\x61\x6d\x8a\x45\x80\x3d\x5c\x73\xcc\x99\x31\xf7\x44\xe4\x87\x55\xe4\x67\x24\xba\x48\xb6\x76\x4d\x65\xbf\xae\x35\xc6\x97\x5f\x94\xfb\xcb\x41\x74\xd8\xc1\x8d\x43\x37\xbb\xc0\x5e\x86\x43\x35\x00\xaa\x36\xcb\xe2\x40\x3b\x4d\x9a\x6e\x18\x18\x09\x0d\xd6\x66\x90\xbe\x61\x0e\x44\x55\x28\x0e\x11\xaf\x55\x5c\x0e\x40\x14\xe1\x2f\xcc\xa1\x27\x2a\xfb\x73\x0c\x30\x09\x9f\xbd\x6c\xbb\x83\x96\x8c\x88\xae\xb9\x62\xfa\xa2\xa4\x95\xc0\x1b\x6a\xc4\x92\xf0\x9c\x52\xaa\x98\x38\x0b\x36\x69\xd2\x23\xaf\xef\xc6\x8b\x6a\x1e\xaf\xac\xec\x17\x7a\x49\x1e\x1d\x76\x70\xe3\xd1\xcd\x2e\xb0\x97\xe1\xd1\x66\xcb\x2d\xc8\x95\x81\xc2\x21\xac\xae\x1e\x3d\x68\x02\x36\x91\x89\x87\x22\x14\x7b\x31\x86\xe8\xda\x3b\x83\xcb\x8b\x21\x72\xc8\xb8\x42\xf5\xf5\x57\xfd\xa2\x27\x2b\xfb\x2b\xb9\xcc\x75\x67\x6e\xe6\xe4\x06\x5a\xbd\x09\x26\x48\x60\x6c\xca\xbd\xf7\x66\x5a\x2b\x35\x4f\xdb\xd1\x49\x8c\xbb\x66\x28\x35\x8f\xa1\xfb\x91\x10\x36\x5e\xf4\xf3\x27\x57\x56\xf6\xab\xd1\x4b\x8a\xfc\x8e\x7b\xb8\x29\xfb\xaf\x3b\x5d\x2f\x3c\xfa\x5f\x47\xbe\xfa\x7c\x98\x7f\x6e\x76\xec\xd2\x18\x49\x47\xa4\x4a\x48\x92\x55\x5a\x72\xd7\x5e\x4b\x94\xa3\x91\x53\x0c\x77\x97\x36\xb4\x00\xa2\x99\xcc\x95\xe4\x91\xab\xb8\xb3\xeb\xfa\x09\xeb\x2b\x43\xe0\x73\x37\x37\x65\xff\x33\x8f\xf0\xeb\x48\x58\xff\x1b\x51\xf6\x5f\x79\xbe\x5e\x79\xc9\x7f\x8e\xb2\x1f\x87\x8e\x3e\x2d\x39\xad\x52\x5e\x22\xa9\x06\x92\x63\x39\xd8\x84\x91\xb4\x46\xb7\xd0\x9e\x3e\x34\xc3\x9c\x29\xda\x65\xe4\x42\xb2\xb4\x7c\x90\x82\x3f\xa3\xe1\x4d\xd9\x7f\xdb\x89\xdc\xec\x27\x7b\xa1\x1a\x63\x8f\xdc\x30\x95\x7d\x53\xd7\xa8\xcc\x34\xed\xe6\x2d\x34\x38\x01\x3d\x77\x88\x67\xd7\x80\x5c\xb4\x95\x34\xad\x67\xe0\xec\xd1\xba\xed\x92\x9f\x62\x7c\x2a\x96\x7e\xf3\xe3\x7f\xff\xf8\x9b\xff\x1f\x00\x00\xff\xff\x45\x0f\xed\x64\x6a\x91\x00\x00")

func Node_modulesKosuSystemContractsSrcDeployedaddressesJsonBytes() ([]byte, error) {
	return bindataRead(
		_Node_modulesKosuSystemContractsSrcDeployedaddressesJson,
		"../node_modules/@kosu/system-contracts/src/deployedAddresses.json",
	)
}

func Node_modulesKosuSystemContractsSrcDeployedaddressesJson() (*asset, error) {
	bytes, err := Node_modulesKosuSystemContractsSrcDeployedaddressesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../node_modules/@kosu/system-contracts/src/deployedAddresses.json", size: 37226, mode: os.FileMode(420), modTime: time.Unix(1567066773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../node_modules/@kosu/system-contracts/src/deployedAddresses.json": Node_modulesKosuSystemContractsSrcDeployedaddressesJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"node_modules": &bintree{nil, map[string]*bintree{
			"@kosu": &bintree{nil, map[string]*bintree{
				"system-contracts": &bintree{nil, map[string]*bintree{
					"src": &bintree{nil, map[string]*bintree{
						"deployedAddresses.json": &bintree{Node_modulesKosuSystemContractsSrcDeployedaddressesJson, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
