// Package witness Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// ../node_modules/@kosu/system-contracts/src/deployedAddresses.json
package witness

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Node_modulesKosuSystemContractsSrcDeployedaddressesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x4d\x93\x1c\x49\x8e\xdd\xbd\x7f\x05\x8d\x67\x1d\x00\xc7\x87\x03\x7d\x5b\xc9\xc6\x56\x32\xc9\x24\x99\xb4\xda\x83\x64\x7b\x00\x1c\xf0\x5e\xda\x76\x77\x8d\x91\xc5\xd1\xac\xd6\xe6\xbf\xcb\x8a\x3d\xc3\x9e\xce\x4c\xb2\xa2\x8a\x59\xdc\xde\x99\x7c\x07\x5a\x31\xc3\x33\x10\x1e\xe1\xfe\x02\x0e\x3c\x78\xfe\xcb\x37\xaf\x5e\xbd\x7a\xf5\x9a\x5e\x7f\xfb\xea\xa7\x3f\x3f\xfc\xf7\xbf\xbd\xad\x7e\xfb\xb7\x71\xdf\xff\x37\xfe\xf9\x17\x47\x3e\x1c\xcd\xef\xef\xd6\x3f\xfd\xc7\x78\xf7\x8f\xaf\xbf\x7d\xf5\x1a\x7e\x2f\x03\xbb\x98\x10\x25\x5d\x93\xc8\x0b\x79\x83\xcc\x6d\x40\x51\x6b\x69\x62\xc1\x5a\x12\x01\xa3\x32\xa5\x92\x96\x37\x8e\x9a\x0c\x34\x7c\xbc\xfe\x77\x17\x4e\xff\x5f\xdf\xff\x90\xfd\xf6\xf5\xb7\xaf\x94\xa6\xb1\xcd\x93\x36\xeb\xee\xc7\xfb\xb7\xb1\xee\xff\xa6\xea\x6d\xbf\x7b\xf7\xd3\x85\x34\x2d\x21\x37\xcb\x39\xd7\x48\xda\x35\xd2\x78\x4e\xf4\xc9\x94\x95\xda\xd8\xaa\xc6\x74\x6a\x70\xbd\xff\xe1\xfd\xf7\x71\xff\xe6\x77\xfd\xb7\xf1\xee\x7f\xbd\xeb\x7a\xfd\xed\x2b\x64\x13\x03\x38\x69\xb9\xdf\xde\xfd\xf0\x93\xad\x08\x11\x2e\x58\xb2\xb7\x4d\x27\x9b\x7b\x0d\xe2\x6a\xa9\x31\x7a\xc1\x70\xa3\x8c\x18\xf3\xd4\xd6\x77\x1f\x2d\xb0\x3b\xf2\x38\x39\xfc\xfd\xdd\x77\x0f\x9d\xf9\x3f\xff\x70\xe1\xf3\x7f\xff\xfd\xdd\x9f\xac\xc3\x0d\x7f\xd5\x38\x1d\x55\x6f\xef\xee\xee\x5f\x7f\xfb\xea\xc7\xf7\xdf\x7f\x7f\x72\xe4\xdd\x7d\xdc\xbf\x7f\x18\x52\x78\x72\xe0\xfe\xee\xf2\x17\xee\xdf\xc6\x8f\xef\x62\xdd\xbf\xb9\xfb\xf1\xe7\x29\x6e\x29\x48\xd9\x63\x54\x27\xf8\x96\x81\xa3\xbc\x5b\x28\x6d\x0f\xe4\x91\xbc\xa0\x24\xb4\x8d\x60\x68\xda\xde\x62\xa4\x2d\xae\x73\xe0\xcc\xb3\x29\xfe\x67\x46\xfe\xd3\x8f\xd5\xbf\x7f\xfd\xed\xab\xd3\x99\x70\xff\xe6\x87\x7e\x77\x1f\x3f\xfc\xf6\xe1\xda\x45\x8d\xc0\x08\xf5\x63\x9b\x3f\xfc\xdc\xfc\xf5\xdf\xbc\xbf\xff\xc7\xbb\xb7\x6f\xfe\x5f\xd7\x1f\xe9\xa0\xdf\x3d\x4a\x5a\xb6\xc3\x69\x36\xc8\x58\xd2\xc3\x00\xcb\x99\x2c\x61\x57\xb0\x61\x23\x54\x81\xa4\x69\xac\x31\x74\xcf\xb5\x73\xc5\xdc\xdd\x89\xa9\x22\xa3\x8e\x90\x96\x1f\x21\x2d\xa7\x9c\x3e\x00\x56\x0d\x32\x46\x9a\x08\x83\x79\xcc\x45\xbe\xa4\x79\x15\xba\xcb\x5c\x7e\x84\xb4\x5c\x50\xf1\xd4\xea\x35\x39\x8b\x18\xcf\x49\xf1\x4f\x9c\xf5\x8b\x4f\x1f\xf0\x2f\x67\x9f\x7c\x68\x1f\x57\xe8\xfe\x57\x7a\xac\x4f\x79\xbc\x1f\xdb\x56\xdc\xc7\x4f\x57\xf3\xa9\xb3\x7d\x7f\xf7\xdd\x9f\x86\x3d\x7c\xa2\xc9\xdb\xfe\xe1\xee\x77\x1f\xee\xf9\x8e\xef\xdf\xf5\x27\x5a\xdd\xdf\xfd\xf6\xcd\xba\x7c\xf3\x3f\xb6\x79\x98\xbd\x0d\x30\x7d\x09\xa1\x8a\x23\x23\xf1\xc3\x8d\xdd\x05\xc1\x7b\x18\xa3\xb3\xcf\xed\x73\x8c\xa0\x8a\xd8\x4d\xc9\x68\xba\x35\x95\x65\xf6\x29\xdb\x9c\x9c\xfd\xca\x5c\x76\xf0\xec\x87\xc7\xf2\xc5\x93\xff\xc3\xa7\xee\xe7\x25\xf2\xe3\xd5\x13\x55\x10\x46\x87\x0d\xa4\xb9\xb5\x1d\xd7\x46\xd0\xb9\x69\xaa\x65\x38\xe9\x64\x67\x1c\x30\x07\x80\xc8\x9c\x82\xda\x2a\xe5\xd5\xfb\x53\xa3\xe0\x02\x09\xca\xe3\x4d\xff\xcb\xcf\x63\xe7\xe1\xf6\x7c\xf2\xe4\xff\xfc\xdb\x7e\x68\xf2\xc3\x9b\x1f\xbb\xce\x6f\xc2\x1f\xbe\xf9\xcc\xed\xf8\x72\x6f\xc3\x2e\x3e\xb2\xcf\x1d\xfc\x42\xe0\xa1\x56\xe3\xc2\x67\x8f\x5e\x0d\x3f\xdd\xce\x13\xf1\xf4\x93\x1e\xff\xc6\xa5\x2e\x3f\x15\x5f\xdb\xdb\xb8\xf2\x84\x3b\x30\xd1\x2e\x7a\x1b\x7c\xd9\xdb\xf8\xcd\xef\xfa\xc7\xfb\xdf\xfc\xf0\xe6\xfe\xfe\xc3\xbb\xe0\xf3\x6e\xc6\xae\x9e\xb8\x8c\xd0\xe6\x58\x6d\xa9\x90\x10\xa0\xc5\x32\x34\x41\x76\xca\xc8\xb1\x52\xd4\x13\x87\x64\x7a\x4c\x2c\x5a\xcb\x76\x2f\x0e\x97\x03\x6e\x86\x9f\xde\xeb\x8b\x6e\x46\x89\xd4\x6e\xd5\xea\xb5\x72\xd7\x2a\xd6\x01\x6e\x4b\xb3\x42\x5c\x55\x77\x79\xc5\xee\x23\x6e\x86\xc2\x20\xa0\x17\x74\x33\x86\x81\xce\xd3\x47\x74\x5b\x1a\xdd\x70\x00\x5f\x9b\xac\xf6\x8a\x44\x37\x4f\x10\xb6\x82\xc9\x44\x1e\x1b\x7a\xec\x04\x9d\x88\xb6\x52\xb3\xab\xbb\x7d\x2d\xd0\x96\xc9\xb0\x04\xb3\x66\x0f\xde\xfb\xcc\xaf\x7f\xe6\xd2\x48\xc7\x45\xb2\xfa\xcf\x77\xef\xde\xff\xdd\xdd\x3f\xf5\x8f\x8f\x32\xd5\xd8\xc4\x04\x1c\xc3\xcb\x36\x4c\x40\x5c\x55\x01\x0c\x53\x6b\x4c\xf1\x6d\xa3\x46\xeb\x9c\xad\x8b\x10\xa7\x4f\x31\x0c\x58\x99\x30\x70\x2f\x3b\xc2\x54\xa7\x9c\x71\x91\xa9\x78\x6e\xca\x5c\x24\xb1\x8a\xb6\x2d\xc9\x91\xe6\x6c\x8b\x7c\x0f\xda\xb4\xb4\x07\x6e\x89\x23\x4c\x45\xe3\x83\xb3\xfb\x92\x2b\x22\x40\x74\x3a\xb5\x70\xe3\xaa\x1b\x0e\xe0\xab\x73\xd5\x98\xcd\x9b\xbd\xac\x4c\xc7\x6c\x48\x75\x14\x8e\x19\x68\x9c\xd6\xe5\xe4\x9c\x98\x73\x7b\x2f\x69\x03\x58\x4c\x0c\x39\x47\xa0\x4c\x39\x0b\x9c\x5e\xe0\xaa\xb3\xeb\xbb\xc0\x55\x13\x2e\x72\xd5\xdf\xbd\xed\x78\xf7\xfe\xed\xe3\x01\x67\x00\x99\x3a\x24\x06\x27\x2a\x17\x8c\xd5\xd8\x0b\x16\x0a\x73\x4d\x5b\xa1\xae\x56\x19\x8e\x0c\x40\x2d\x0e\x43\xcc\x92\x63\xc5\x68\xe2\x43\x54\x75\xea\x7d\x5c\xa4\x2a\x0a\x2c\x34\x1c\x38\x43\x2a\x4a\xd8\x8b\xdc\x02\x17\x4e\x76\xa8\xe8\x07\x0a\xa5\xe4\x23\x54\x35\x50\xe6\xc0\xd3\x38\xf7\x35\xa9\x0a\x5d\xc5\xe7\x8d\xaa\x6e\x78\x06\xbe\x36\x55\xf5\x2c\x9f\x96\x62\x24\x41\x73\x4f\x1c\x83\x13\x7a\x04\x4f\x49\x62\x5f\xd4\x9d\xae\x6b\xe7\xcc\xe5\x33\xd4\x91\x33\xc6\x52\x08\xdf\x7c\xee\x1d\x3c\xcf\xad\x62\xe0\x8b\x54\xf5\xf7\x77\xf7\x6f\x7e\xfc\xee\x51\xa2\x6a\xa9\x4e\xdf\x9b\x32\x56\xcf\x6d\x6a\xa0\x50\xb8\x62\x29\x7f\xf0\x13\xd7\xaa\x16\x50\xd7\x58\x30\xab\x87\xe8\x08\xaa\x1c\x64\xb8\x66\x9d\x75\xe2\x12\x51\x1d\xca\x8c\x0d\xe6\x41\xa4\x32\x31\x13\x98\x3f\x30\xc8\x5e\xb5\x37\x14\xeb\x56\xa9\x31\xad\x69\xea\xa1\xcc\x98\x2b\xf9\x38\x7d\xb8\x57\x25\x2a\x60\x14\x3a\xb5\x70\x23\xaa\x1b\x0e\xe0\xeb\x13\x95\x13\x41\xa0\x92\xec\xd5\x62\x9b\xa1\xc4\xb5\x30\x11\x79\x0c\xcf\xda\xca\x0d\x03\xf6\x74\x88\x81\x4c\x0e\x09\xb1\x65\x00\x0b\xc4\x91\xf5\x9f\x1e\x20\xaa\x41\x17\x89\xea\xbf\xdf\xbd\xbb\xef\xb7\xff\xa3\xbf\x7b\xf3\xee\xfe\x80\x67\x35\xf6\xb0\x41\x4b\x89\x90\xd9\xa1\x87\xac\x05\x3b\x22\x6b\xc7\x98\x65\xe1\x33\x81\xcb\x45\x19\x06\x6d\xa6\x15\xb4\x4b\xc2\xa7\x37\x0c\x3c\x14\xae\x3a\x94\x15\x13\x84\x49\xb4\x95\x93\x3d\x04\xc6\x9a\xd2\x32\x97\x6f\xa5\x2c\x5b\xbe\xd9\x53\x78\xac\x43\xe1\x2a\x65\x9d\x2f\xc9\x57\x62\x26\x76\xcb\xe4\xdf\xf0\x0c\x7c\x6d\xba\x82\x91\xe5\xe8\x51\x2b\xad\xa6\x56\x8b\x68\x2f\x27\xd3\xa8\x6e\x17\x33\xdd\xe9\x99\x5b\xe6\xc6\x6e\x42\x36\x96\x0d\xb3\x69\xe6\xc2\x71\x64\x09\x78\xc4\xaf\x22\xbc\xec\x57\xc5\xf7\x6f\x2a\xee\xef\x8e\x33\xd6\xee\x35\xd1\xdb\x07\x62\x15\x0d\x82\xa2\x44\x63\xb7\x89\x0d\x9e\x54\xea\x53\x05\xcb\x39\x02\x16\x34\xf0\x12\xa3\xd1\x04\x5e\x91\x7d\xd6\x9f\x73\xc6\x12\x38\xed\xd0\x45\xc6\xda\x38\x82\x16\xcd\xf1\xb0\xb6\xde\x2b\x1b\x46\x11\x87\x54\x6e\xce\xa4\x35\xab\x1c\x48\xf0\x08\x63\x89\x12\xc1\x99\x67\x77\x55\xca\x12\x81\xf3\x8e\x7d\x51\x26\xff\x99\x37\xe0\x2b\x3d\xd8\xa7\x3c\xe0\x8f\x6d\x9f\x94\xc9\xa7\x5b\x26\xff\xd7\x9e\xc9\x2f\x45\x0f\x36\xd2\x1e\xe4\x69\x43\x96\x04\xc1\x8e\x52\x85\xd4\xc5\x81\x8d\x44\xc2\xab\x69\x13\x6d\x52\x87\x54\xe1\x44\x5c\x50\x6c\xa7\x71\x9c\x4b\xc6\x1e\x1b\x0d\x7f\x11\x99\xfc\x6b\x24\x95\x3f\x85\xab\x65\xf2\xcf\x4f\xc4\xcf\xbd\xa6\xc3\x57\x81\x9f\xb4\xfd\x29\xfc\x65\x67\xf2\xaf\x3c\xe1\x0e\x4c\xb4\x8b\xde\x06\x5f\x8e\xe2\xfc\xef\x7e\x7b\xf7\x9b\xdf\xff\xfd\xf8\x9f\xef\xf3\x3f\xfc\xf1\x95\xfe\x78\xec\x99\xa7\x55\x84\x9a\x60\x83\xae\x85\x02\xce\xbe\x79\x88\xe6\x00\xb3\x40\x98\x85\x4c\x14\x23\xd8\x5d\xcd\x76\x86\xe2\x64\x6b\x4c\x8e\x03\xba\x41\x81\xd3\x10\xed\x45\x7f\x23\xc9\x25\x87\xe2\xb6\x21\xba\x1c\x17\x32\xf5\xa6\x3d\x79\x01\x72\xf5\xc6\x6a\xdc\x74\x48\x37\x28\x42\x3a\xce\xbc\x81\xab\x86\x74\xe6\x54\x9b\xa7\x0b\xd9\xdb\x1a\xe9\x86\x03\xf8\xea\x69\x32\x2b\x5c\xe9\x0c\x30\xa2\x37\xad\x98\x95\x8b\xa4\x7c\x73\x38\x20\xe6\x5a\x3a\x80\x5a\xda\x18\xf6\x88\x4e\x44\xdd\xae\xc9\x2e\x3a\xcf\x35\x34\x97\xd2\x64\xa7\xce\xfd\x25\xda\xb2\x3f\x8b\xe9\x7c\xf8\xeb\x8f\xe4\xf5\xfa\x81\x4f\xbe\xa0\x60\xc3\x6b\x29\x26\xe3\xd8\x43\xc8\x77\xf9\x83\xcb\x0c\x85\xbd\x43\xc8\x26\x0e\xef\xde\xbd\xa3\xe1\x61\xa2\x2f\xb3\xe6\xb2\x65\x12\xee\x61\x04\x67\x41\x97\x5f\x72\xd8\xa1\x80\x74\xda\xae\x50\x62\xdc\x06\x2b\xa3\xdd\x66\xa4\xac\x02\xa8\xd5\x02\x03\x7c\x36\xa1\x9c\x09\xc7\x2f\xb1\xd7\xc5\x42\x8a\x9f\xc9\x6b\xc9\xc0\xcd\x46\x5b\x61\x76\x4a\x07\x97\xe6\xa8\x5d\x59\xc2\x80\xc4\x53\x28\x4c\xcf\x62\x57\xb7\x4a\x8d\x1b\xbe\x1c\xa7\xa3\xea\x3a\x0c\x85\x85\x63\x14\xb4\xa9\xad\x59\x3c\x86\x39\x2d\x54\x9d\xe4\xb2\x1e\x9c\x4a\x66\x44\x21\xab\x32\x20\xcd\x99\x39\xc9\x47\x3a\x2a\xe4\x50\x3a\xcb\xf3\x5c\x60\xa8\x53\x95\xff\x05\x82\x42\xb9\x1c\xc5\x79\x4e\x3d\x06\x3b\xe9\x9c\x9a\xa9\x18\x6b\xae\xe9\xb1\x82\x45\x1b\x7c\x19\x2e\x0e\x1b\x5d\xbb\x22\x37\xe3\x6e\x09\x71\xcd\xbd\xc0\x61\x82\xc4\x84\xf9\x48\x1c\xe7\x50\xcc\xb9\x79\x12\x82\xaf\x64\x5c\x73\xd2\xae\xb1\x1b\xb0\x8d\x96\xb6\x20\x89\x6e\x17\x93\x3a\x94\x24\xbb\x58\x28\x71\x4d\x4e\xba\x7e\x25\xc6\x33\xbb\xff\xf3\x00\xf9\xab\x8d\x60\x1c\x7e\x9a\x4f\x8a\x60\x3c\x1e\x7c\xfa\xec\x18\xff\xd8\xea\x72\x18\x18\xc5\x78\xae\x1d\x60\x20\x9b\xcb\x79\x27\x94\x2e\x74\xe2\xdc\x63\xc9\xdc\x12\xa9\x12\x98\x14\xd4\x63\x0a\xf9\xec\x46\x2a\x52\xf0\xb3\x81\x79\xc9\xd8\x63\x15\x2e\x2f\x4b\x00\x1f\xcd\x3c\xbd\xd6\xe6\x8b\x43\x2c\x4f\x8c\x33\xbc\x44\x3d\xc4\x67\x71\x1e\x73\xb0\x0b\x57\xf1\xd9\x10\xcb\xa7\xae\xf9\xea\x21\x96\x23\xb8\xda\x0d\x3c\xed\xf2\x73\x7a\xf3\x32\x2f\xfc\x2b\xcf\xd7\x67\xbf\xf0\x2f\x67\x99\x9f\x54\x12\x51\x85\x12\x56\xd3\x7c\x80\x31\xf8\x00\x90\x99\x5c\x73\xb0\x3c\x2c\xae\x76\xe7\xd6\x18\xfb\x61\x11\x90\xa6\x43\x9a\x1e\x3e\xa6\x20\x95\x0d\x91\x9f\x7f\xd3\xe3\xa1\x6a\x88\xb1\x29\x76\xef\x0d\x8e\xbc\x89\xa6\xfa\xaa\x9d\x9b\xf6\xda\x36\x61\x11\xe5\xf8\xa0\x72\x3e\x24\xdc\x33\x98\xf4\xe9\xa2\xcb\x2f\x7f\xd5\x5f\x34\x70\x5b\x7e\xdc\x70\x00\x2f\xc3\x46\x6b\x6e\x17\x48\x6b\x28\x66\xe2\xe1\x0d\x9b\x96\x6f\x03\x34\x5a\x3e\x04\xb6\xef\x54\x68\x1d\xb1\xd6\x92\x9a\x62\x1b\xf7\x86\xcc\x01\x75\x28\x89\x7c\x88\x8d\xe4\x22\x1b\x1d\xaf\x79\x90\xea\xb0\x90\x5e\x60\x44\x96\xb9\x63\xf9\x18\xbc\x82\x97\xec\x18\xa0\xbb\xa7\xee\x40\xf3\x3d\xca\x6b\xd1\x87\x7a\x61\x75\x49\x2f\x53\x7c\x8c\x8a\x0e\xc5\x71\xd7\xb2\x87\xde\x68\x29\x9a\xe5\x48\x1c\x53\x66\xcc\x45\x3e\x14\x78\x24\x17\x2d\xee\x71\x28\x8e\xfb\xa1\x18\xc1\xed\x25\x97\x1d\x17\x2d\xdc\xc8\xe8\x86\x03\x78\x19\x32\x72\x00\x16\xad\x5a\xe6\x06\xdc\x3a\x61\x45\xea\x4c\xf5\xcd\x2b\xd5\xa6\xf8\x64\x55\x27\x6d\x1f\x90\x4e\x14\x7b\xb3\x01\xb6\xdb\x9e\xf3\x88\x00\xef\x10\x19\xd9\x45\x32\x3a\x5c\xd4\xa0\x60\xdd\x88\xb1\x76\xec\x4e\x4c\xc4\xce\xc5\x91\xdc\x73\xca\x44\xab\x49\x66\x19\x33\x8d\xc6\x94\xb0\x25\xb2\xbd\xe7\x6a\x9b\xdb\xf7\xb9\xab\x72\xc2\x45\x87\xa2\xb2\xac\x32\xc7\x76\xb0\x51\x35\x78\xf8\x1a\x0b\xc9\x76\x38\x1b\x85\xce\xe2\x3d\xbc\xf8\x9c\xbf\x3f\x21\x13\x56\xa0\x97\xe4\xa2\xcb\x16\x6e\x5c\x74\xc3\x01\xbc\x0c\x17\xa5\x61\xf1\xc2\x6d\xdd\xf0\x61\xab\xab\x9a\x48\x09\x6b\x7f\x50\xfd\xda\x26\xcf\x29\x22\x96\xd8\xe5\x45\xb0\x82\x8c\x94\x76\xb0\xe2\x5e\xe3\x6c\x12\x3f\x93\x8b\xf4\x13\xea\xba\x63\x55\x0b\xba\x90\xf6\xae\x9d\xd8\x81\x84\x01\x88\x43\x3d\x9b\x57\x0b\x69\xd4\x8a\x25\x1e\xf0\xc0\xb0\x4b\x96\xa8\x09\xa8\x10\x24\xe6\x70\xa7\xf1\x48\xd5\xc2\x38\xed\xc0\x65\xfd\x6f\x29\x2c\xa7\xb2\x64\x53\x1b\xab\xc8\xe6\xb2\xec\xd9\xce\x8a\xa9\xb3\xd7\xce\x8e\x43\x0b\xb4\xcb\xe5\x04\x57\x65\xa2\x5b\xc1\xc2\x0d\xcf\xc5\xcb\x30\x11\x83\xa6\x66\xcb\x00\x06\x2a\xa5\x69\x6b\x4d\x63\x60\x73\xd2\x51\x46\x15\xaa\x2c\x8d\x2d\x1e\xd1\x36\x36\x11\x98\x6b\xe3\x04\x50\x3b\xd3\xa9\x3c\x97\x89\x2e\x2b\x6f\x9e\x5a\x96\x30\x9c\x41\x3b\x42\x7b\xc7\xae\xe6\xcc\x4a\x36\xa8\xb1\xb1\x0b\x39\x73\x38\xe7\x72\xdf\x33\xd3\x18\xb6\x33\xa0\x08\x19\x20\x64\x9c\x6b\x60\x4e\x18\xe9\x50\x59\xfa\x6c\x15\xe2\xb4\x01\x32\x91\x06\x6b\x3b\x06\x72\xb2\x8e\x1a\x95\x2b\x16\x75\x35\x9e\x69\x60\x2e\xea\x6d\x2e\x15\x0c\x5c\x93\x90\x6e\x15\x09\x37\x3c\x17\x2f\xc3\x47\xb4\x0d\xb4\x78\xef\x31\xcd\xca\xb6\x3a\x6f\x29\x6a\x5d\x13\xb2\x62\x79\xe0\x4c\x37\x61\x1b\x6b\x3b\x7c\xd0\x73\xf7\xc3\x4c\xf6\xe5\x7b\x9f\x57\x16\x3d\x97\x8f\xe6\x65\xcf\xe8\xc9\x75\x07\x22\x8c\x5c\x38\x71\xce\x84\x22\x80\x5d\xed\xe8\x2a\x26\xa6\xd9\x73\xd2\x6a\x71\x40\x18\x7b\x85\xe7\x8e\xe1\xbe\x58\x9a\x6c\xe5\xa2\x38\x4b\x22\x9f\x50\xd2\xa1\xe5\x1a\x01\x66\x02\xd8\x1e\x61\x41\x2b\xda\x1d\x6d\x32\xed\x66\xe2\x61\x22\x48\x3e\xe6\x79\x6e\xfc\xb2\x04\xf0\x52\x41\xc0\x55\x39\xe9\xfa\x25\x07\xcf\xbc\x01\x3f\x8f\x90\x5b\xca\xfa\x5f\x35\x65\x7d\x3a\xcc\x3f\x36\xbb\x2c\x26\x96\x55\x3e\xdc\x0b\x8d\x91\x4c\x16\x0f\xd9\x9c\x6b\x7a\x4c\x2d\xf5\x9e\x23\xc3\x05\x73\xe8\xb4\x9e\x33\xa8\x95\x20\x4d\xaa\x48\x57\x7d\x5a\x60\xff\xec\x9c\xf5\x95\x49\xe0\xa3\x99\xaf\x9e\xb3\x7e\xf2\x0e\x74\x4f\x4c\xb9\x7e\xf9\xb6\x79\x57\x28\x0b\xf8\x8b\xc9\x59\xff\xe2\x82\x7f\xbd\x39\xeb\x2b\xcf\xd7\xe7\xbe\xf2\xe7\xe5\x60\xc8\x73\xc4\xff\xd4\xbe\xb4\x8b\x9c\xe7\x50\xd6\x18\xe4\x2e\x8e\xd5\x44\x31\x18\x82\x75\x87\x2e\x34\xef\x00\x8a\x08\xb3\x06\x23\x16\x8f\x9a\x33\xf4\x91\x18\x2d\x1d\x8a\x8c\xc0\x50\xe9\x59\x98\xe0\x3c\x6d\xae\x44\xc2\xc9\x8d\x16\xb8\x7a\x2f\xc6\x31\x3d\xf4\xd8\x7e\xc1\x97\x55\xf9\x57\x8d\x8c\xdc\x74\xff\x37\x3c\x17\x2f\x43\x4b\x11\xc2\x29\x58\x06\xde\x44\x46\xdc\xe5\x53\x96\xdb\xd6\x22\x59\xa1\xab\x36\xe0\x52\xf5\x1c\xd3\x71\xf4\x0e\x95\x94\x1e\xec\xbc\x86\x1e\xd9\x5d\xf4\x10\x2d\xfd\x59\x64\xe4\x9b\x57\xbf\x14\xf7\xcb\x17\x88\xfb\x1f\xae\x56\x19\xa8\x52\x86\x07\x37\x77\xc9\x70\x43\xeb\x52\xf3\xdd\x01\xaa\x1f\x36\xc5\x6e\x1d\x0a\xa2\x85\x8d\xb0\x55\xcc\x72\x55\xe7\x23\xd1\xdb\xaf\x2f\xee\x9f\xe8\xf3\xd3\x7b\x8d\x5e\x41\xdc\x7f\xc9\xc0\x8d\xa0\x6e\x38\x80\x17\x0a\xdd\x9a\xed\x98\x98\x7b\xef\x6a\xf0\x58\x55\xc2\x2a\x93\x5d\x41\xb0\x57\xaf\x50\x16\xdb\x11\x7b\x01\x39\x11\x90\xc5\xf0\x31\xd0\xac\x62\x1e\x29\x9a\x7c\x84\xa0\x94\x86\x81\x5d\xd6\xfa\x3d\x47\xdc\xef\xb0\x84\xb7\xab\x07\x32\x42\x64\xf4\x42\x9b\x12\xb0\x36\xa7\xcd\x0f\xe9\xaf\xc8\xca\xe5\xc3\x65\x25\x46\x4d\x36\x87\x4c\x5e\x1b\x68\x3e\xf2\x0b\x31\xa7\x19\xe0\x97\x17\xf7\x0f\x75\xfb\xf4\xa6\xa2\x57\x50\xd9\x5c\x32\x70\x13\xf7\x5f\x77\xb6\x1e\x3c\xfb\xaf\x23\x52\x62\x4f\x09\x94\x10\xc6\xc2\x04\x89\xc0\x0f\x3b\xd0\x8d\x07\xfa\xc0\x9e\xb1\x06\x67\xee\x9a\x03\x6a\x58\x95\x96\xc9\xe0\x70\x6f\xda\xc3\xa8\xcc\x0c\x70\xe6\x69\x7d\xdf\x25\x63\x4f\x0c\x94\x5c\x99\x00\x3e\x9a\xb9\x89\xfb\xcf\x70\x13\xf7\x7f\x02\xbf\xde\x40\xc9\x95\xe7\xeb\x95\x5f\xf8\x4f\x12\xf7\x0f\xa6\xb5\x66\x0e\x36\x90\xca\xad\x53\x47\x49\x21\x6b\xec\x70\xde\xd8\x92\x21\x8a\x90\xad\x34\x31\xc6\x68\xd4\x48\xf5\xc9\x73\x08\x3f\x96\xa9\x3d\x54\xc6\x77\x55\x6d\xbf\x8a\x8f\x97\x4c\x8a\x5c\x34\x70\x5b\x7d\xdc\x70\x00\x2f\x54\x69\x44\x60\x94\xcc\x38\xc0\x61\x74\x86\x34\x96\x6c\x84\xd8\x35\x9d\x56\xd4\xe8\x8e\x12\x30\x18\x56\x1e\x12\x33\x26\x8b\x2e\x5b\x64\x01\x57\x10\x8e\x7c\x8e\x8c\x8e\x6b\xfb\xf5\x81\x3d\x7b\x6c\x57\xa0\x00\x9c\x28\x03\xaa\x39\x27\xc7\x92\xc2\x35\x1b\xb4\x99\x6d\x96\x76\x72\x43\x3d\xb0\x85\x6b\xec\x65\xda\xa2\x8f\x24\x68\xf1\x50\xac\xf6\x9a\xda\xfe\xe1\x8e\xa2\x2f\xb9\xea\xb8\x6c\xe1\x46\x46\x37\x1c\xc0\x0b\x69\xfb\x15\xb0\x69\x47\x61\x10\x0e\xa7\x2d\x22\x15\x92\xa6\x8e\xbe\x49\x67\x47\xcc\x07\x6f\x09\x64\xd6\x4a\x6c\xca\x9e\xcc\xaa\xc3\x25\x00\x8f\xfc\xee\xe4\x17\x90\xd1\x61\x6d\xff\x12\x55\xb0\x5e\x73\x0e\x92\x62\xc2\x3d\x02\x6b\x26\x73\x7b\xef\x9c\x6b\xc7\xd8\xca\x66\x96\x33\x78\xb7\x36\xce\xd5\x9a\xf6\xe0\x19\x11\x3d\xf2\x83\x05\xc7\x4a\x1e\xaf\xaa\xed\x1f\x3c\xf1\x33\x3f\xab\x72\x85\xbc\xd1\x45\x0b\x37\x2e\xba\xe1\x00\x5e\xc8\x31\x5a\x06\xcb\x98\x49\x03\x38\x8a\x89\xd6\x84\xb1\x69\x4a\xa9\xc5\x5a\x88\x65\x80\xc1\xd2\xa9\xc4\x83\x22\x67\xf2\x9a\x61\x22\x2a\x36\xaf\xa0\x60\xfb\x1c\x17\x1d\xd4\xf6\x2f\x77\x27\x16\x8a\x74\x18\x15\xe8\x51\xb9\xbb\xa4\xd8\x47\x33\x4f\x81\x35\x0a\x3c\xc7\xf2\x01\xb8\x29\x66\x91\x48\x2d\x49\x41\xe4\x7c\xcc\x2b\x3a\xb4\x53\xee\x35\xb5\xfd\xd3\x9d\xe8\xd3\x1b\xe5\x7e\x39\x11\x5d\x34\x70\xe3\xa1\x1b\x0e\xe0\x65\x78\xa8\x09\xa0\x3b\x59\x9d\x17\xda\xc3\xa4\xd9\x1b\x08\x57\xc1\x06\xdb\x66\x50\x91\x20\x84\x38\x27\x34\x2f\xd5\x68\x6f\xee\x00\x18\x63\xad\x78\x61\x1e\x7a\xa2\xb2\xbf\x88\xc0\x74\x85\x6c\xb7\x8c\x80\xd9\x4a\x6b\xed\x16\x5f\x12\x3e\x6a\x78\x01\x27\x34\x2d\xd7\x15\x25\xda\x73\x62\xa1\x34\xe4\x98\x35\xce\x72\x5d\x27\x7c\xf4\xaf\xa1\xec\xd7\x33\xf1\xee\x95\x95\xfd\xe7\x06\x6e\x7c\x74\xc3\x01\xbc\x50\xcd\x23\x5b\xa5\x22\x77\x2d\x54\x5e\xca\x33\x66\xac\x4d\x43\x00\xf7\x18\xa6\xb1\x26\x42\x73\x34\xe3\xd2\xe9\x99\xb5\xb8\xa3\x19\x56\x91\xd2\xd9\x26\x0a\x57\xf6\x8b\x9e\xac\xec\xef\xe2\xb6\x98\x59\x95\xcc\xc5\x1b\x86\xef\x1c\x20\xa0\x0b\x57\x8e\xca\xcc\xe4\xe1\x5e\xb3\x1e\x96\xa3\x32\x18\xb3\x65\xcd\xb1\x99\x68\xe6\x23\x21\xec\x63\x9b\x42\x5c\x55\xd9\x0f\x34\x6d\xbc\xa4\xc8\xef\xb2\x85\x9b\xb2\xff\xba\xd3\xf5\xe0\xd9\x7f\x1d\xf9\xea\xd3\x61\xfe\xb1\xd9\x65\x97\xc6\x86\xee\xb5\x6a\xea\xd2\x1a\xd6\x65\xc5\xbb\xd3\x5d\x27\xaf\x8d\x5c\x6a\x98\xbb\xe7\x86\xad\x80\x68\xa6\xe2\x35\x62\x95\x37\xef\x3a\xdb\x70\xf7\x92\xb1\x27\x26\xac\xaf\x4c\x02\x1f\xcd\xdc\x94\xfd\xcf\x3c\xc3\x5f\x47\xc2\xfa\xdf\x88\xb2\xff\xca\xf3\xf5\xca\xaf\xfc\xe7\x28\xfb\x91\x26\xed\x87\x57\xce\x9e\xda\xd1\xaa\x35\x0d\xb4\xc8\x03\x4c\x80\x6a\x38\xed\xad\x23\x25\x68\xd6\xb2\xe0\xb1\x76\x28\x95\xe3\xb0\xb2\x7a\x64\x4b\x6c\x3c\xf4\x6b\xb2\x37\x65\xff\x0d\x7f\x25\x78\x29\x65\xff\xaa\x04\x99\x1c\x39\x76\x53\x57\x95\xcd\xbd\x39\x75\x10\x17\x60\x54\x2e\x8d\xda\x4d\x50\x3e\x72\x8e\x59\xb6\x65\xa1\x6c\xda\x33\xed\x2c\xcd\x72\x05\x5a\xfa\xe6\xa7\x7f\xff\xf0\xcd\xff\x0f\x00\x00\xff\xff\xcd\x7f\xc4\x09\x68\x91\x00\x00")

func Node_modulesKosuSystemContractsSrcDeployedaddressesJsonBytes() ([]byte, error) {
	return bindataRead(
		_Node_modulesKosuSystemContractsSrcDeployedaddressesJson,
		"../node_modules/@kosu/system-contracts/src/deployedAddresses.json",
	)
}

func Node_modulesKosuSystemContractsSrcDeployedaddressesJson() (*asset, error) {
	bytes, err := Node_modulesKosuSystemContractsSrcDeployedaddressesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../node_modules/@kosu/system-contracts/src/deployedAddresses.json", size: 37224, mode: os.FileMode(420), modTime: time.Unix(1568718717, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../node_modules/@kosu/system-contracts/src/deployedAddresses.json": Node_modulesKosuSystemContractsSrcDeployedaddressesJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"node_modules": &bintree{nil, map[string]*bintree{
			"@kosu": &bintree{nil, map[string]*bintree{
				"system-contracts": &bintree{nil, map[string]*bintree{
					"src": &bintree{nil, map[string]*bintree{
						"deployedAddresses.json": &bintree{Node_modulesKosuSystemContractsSrcDeployedaddressesJson, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
